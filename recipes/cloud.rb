# Cookbook Name:: rackspace_cloudbackup
# Recipe:: cloud
#
# Copyright 2014, Rackspace, US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Install the agent
include_recipe "rackspace_cloudbackup::cloud_agent"


# Install deps for the Python scripts
package "python-argparse" do
  action :install
end

# Insert our scripts
['run_backup'].each do |script|
  cookbook_file "/usr/local/bin/#{script}" do
    source script
    mode 00755
    owner "root"
    group "root"
  end
end

# Load in the Opscode::Rackspace::CloudBackup module
class Chef::Recipe
  include Opscode::Rackspace::CloudBackup
end

# Configure our backups
id_map = {}
node['rackspace_cloudbackup']['backups'].each do |node_job|
  job = node_job.dup # Obtain a copy that's not in the node attributes so we can tinker in it
  
  if job['label'].nil?
    # NOTE: This format intentionally matches earlier revisions to avoid creating duplicate backups
    job['label'] = "Backup for #{node['ipaddress']}, backing up #{job['location']}"
  end

  if job['cloud'].nil?
    job['cloud'] = {}
  end

  rackspace_cloudbackup_configure_cloud_backup job['label'] do
    rackspace_username   node['rackspace']['cloud_credentials']['username']
    rackspace_api_key    node['rackspace']['cloud_credentials']['api_key']
    rackspace_api_region node['rackspace']['datacenter']
    inclusions           [job['location']]

    version_retention    job['cloud']['version_retention'] || node['rackspace_cloudbackup']['backups_defaults']['cloud_version_retention']
    notify_recipients    job['cloud']['notify_email']      || node['rackspace_cloudbackup']['backups_defaults']['cloud_notify_email']
    is_active            job['enabled'] || true

    # Backups configured with this module are triggered by cron for consistency with non-RS cloud
    frequency            "Manually"
    action :create
  end

  # Shared defininition from definitions/cron_wrapper.rb
  cloud_backup_cron_configurator "#{job['label']} cron_configurator" do
    job job
    # Debug!
#    command "/usr/local/bin/run_backup -l '#{job['location']}'"
    command "/bin/false -l '#{job['location']}'"
  end

  # Save the backup configuration ID for use by the run_backup template
  id_map[job['label']] = Opscode::Rackspace::CloudBackup::RcbuHwrpHelper.new(node['rackspace']['cloud_credentials']['username'],
                                                                             node['rackspace']['cloud_credentials']['api_key'],
                                                                             job['label']).backup_id
  Chef::Log.info("Backup API ID for backup '#{job['label']}: #{id_map[job['label']]}")
end

# This file is generated by configure_run_backup.py but it contains the API key
# Ensure it is only redable by root
file "/etc/driveclient/run_backup.conf.json" do
  owner "root"
  group "root"
  mode "0600"
end

# Clean up after earlier revisions
%w(auth.py backups_created create_backup.py .registered verify_registration.py configure_run_backup.py run_backup).each do |target|
  file "/etc/driveclient/#{target}" do
    action :delete
  end
end
